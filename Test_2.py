# 1)
# Создать список и заполнить его элементами различных типов данных. Реализовать скрипт
# проверки типа данных каждого элемента. Использовать функцию ​type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

my_list1 = [1, 'asd', False]
my_list = ['qwerty', 123, 1.2, my_list1, True]
print(f'Имеется список состоящий из элементов различных'
      f'типов данных {my_list}')
for el in my_list:
    print('Элемент- ' + str(el) + '- его тип -' + str(type(el)))

# 2)
# Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются
# элементы с индексами 0 и 1, 2 и 3 и т.д. При нечетном количестве элементов последний
# сохранить на своем месте. Для заполнения списка элементов необходимо использовать
# функцию ​input()​
print(' ')
print('     Для списка реализовать обмен значений соседних элементов, т.е.\nЗначениями обмениваются '
      'элементы с индексами 0 и 1, 2 и 3 и т.д.\nПри нечетном количестве элементов последний '
      'сохранить на своем месте')

my_list = []

my_list_len = int(input('Введите длинну списка который хотите создать : '))
print('Вам нужно ввести ' + str(my_list_len) + ' значений, которые будут помещены в список.')

for el in range(0, my_list_len):
    my_list.append(input('Введите ' + str(el) + ' значение списка: '))

print('Это, созданный вами список: ' + str(my_list))

print('Теперь мне нужно поменять местами значения в списке (обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.')

for i in range(0, my_list_len - 1, 2):
    my_list[i], my_list[i + 1] = my_list[i + 1], my_list[i]

print('Это, список  после обмена значений: ' + str(my_list))

# 3)
# Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.  Winter, spring, summer, autumn

print(' ')
print(' Первый вариант')
season = {12: 'Зима', 1: 'Зима', 2: 'Зима', 3: 'Весна', 4: 'Весна', 5: 'Весна', 6: 'Лето', 7: 'Лето', 8: 'Лето',
          9: 'Осень', 10: 'Осень', 11: 'Осень'}
n_month = 0
while n_month < 1 or n_month > 12:
    n_month = int(input('Введите номер месяца от 1 до 12? а я скажу  к какому времени года относится месяц: '))
season_my = season.get(n_month)
print('это будет ' + str(season_my))


#Второй вариант

print(' Второй  вариант')

seasons_list = ['Зима', 'Весна', 'Лето', 'Осень']
month = 0
while month < 1 or month > 12:
    month = int(input("Введите число соответствующее месяцу:  "))
if month == 1 or month == 12 or month == 2:
    print(seasons_list[0])
elif month == 3 or month == 4 or month == 5:
    print(seasons_list[1])
elif month == 6 or month == 7 or month == 8:
    print(seasons_list[2])
elif month == 9 or month == 10 or month == 11:
    print(seasons_list[3])
#Третий вариант

print(' Третий  вариант')

seasons_dict = {1: 'Зима', 2: 'Весна', 3: 'Лето', 4: 'Осень'}
month = 0
while month < 1 or month > 12:
    month = int(input("Введите число соответствующее месяцу:  "))
if month == 1 or month == 12 or month == 2:
    print(seasons_dict.get(1))
elif month == 3 or month == 4 or month == 5:
    print(seasons_dict.get(2))
elif month == 6 or month == 7 or month == 8:
    print(seasons_dict.get(3))
elif month == 9 or month == 10 or month == 11:
    print(seasons_dict.get(4))



# 4)
# Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки.
# Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.

new_list = []
print(' ')
for words in input('Введите строку из нескольких слов разделенных пробелами,'
                   ' я разделю его на отдельные слова: ').split():
    new_list.append(words)

for it, el in enumerate(new_list, 1):
    print(it, el[0:10])

# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
#  Если в рейтинге существуют элементы с одинаковыми значениями,
#  то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].

# Сделал так
print(' ')
print('Первый вариант программы "Рейтинг" ')
my_list = [8, 7, 7, 6, 5, 5, 3, ]
print('Имеющийся рейтинг: ' + str(my_list))
user_el = int(input('Введите число: '))
my_list.append(user_el)
my_list.sort(reverse=True)
print('Новый рейтинг: ' + str(my_list))

# Подумал, что не может быть настолько просто и сделал так. И f-строки опробовал заодно.
print(' ')
print('Второй вариант программы "Рейтинг" ')
my_list = [7, 5, 3, 3, 2]
print(f"Рейтинг - {my_list}")
us_digit = int(input("Введите число (666 - выход) : "))
while us_digit != 666:
    for el in range(len(my_list)):
        if my_list[el] == us_digit:
            my_list.insert(el + 1, us_digit)
            break
        elif my_list[0] < us_digit:
            my_list.insert(0, us_digit)
        elif my_list[-1] > us_digit:
            my_list.append(us_digit)
        elif my_list[el] > us_digit and my_list[el + 1] < us_digit:
            my_list.insert(el + 1, us_digit)
    print(f"Измененный список - {my_list}")
    us_digit = int(input("Введите число "))

# 6.
# * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами
# (характеристиками товара: название, цена, количество, единица измерения).
# нужно сформировать программно, т.е. запрашивать все данные у пользователя.
# Пример готовой структуры:
# [(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})]
# Необходимо собрать аналитику о товарах.
# Реализовать словарь,в котором каждый ключ — характеристика товара,
# например название, а значение — список значений-характеристик, например список названий товаров.
# Пример:
# {“название”: [“компьютер”, “принтер”, “сканер”],“цена”: [20000, 6000, 2000],“количество”: [5, 2, 7],“ед”: [“шт.”]}
print(' ')
it = int(input("Введите количество видов товара "))
y = 1
my_dict = []
my_list = []
analys = {}
while y <= it:
    my_dict = dict({'название': input(f"Введите название {y} товара "), 'цена': input(f"Введите цену {y} товара "),
                    'количество': input(f'Введите количество {y} товара '),
                    'eд': input(f"Введите единицу измерения {y} товара ")})
    my_list.append((y, my_dict))
    y = y + 1

print(' Список  ')
print(' ')
print(my_list)
print(' ')
print(' Дальше не понял ')
